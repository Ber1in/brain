# Copyright (C) 2021 - 2025, Shanghai Yunsilicon Technology Co., Ltd.

# coding: utf-8

"""
    Ceph REST API

    This is the official Ceph REST API

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json


from typing import Optional
from pydantic import BaseModel, Field, StrictInt, StrictStr

class ApiBlockImageImageSpecCopyPostRequest(BaseModel):
    """
    ApiBlockImageImageSpecCopyPostRequest
    """
    configuration: Optional[StrictStr] = None
    data_pool: Optional[StrictStr] = None
    dest_image_name: StrictStr = Field(...)
    dest_namespace: StrictStr = Field(...)
    dest_pool_name: StrictStr = Field(...)
    features: Optional[StrictStr] = None
    obj_size: Optional[StrictInt] = None
    snapshot_name: Optional[StrictStr] = None
    stripe_count: Optional[StrictInt] = None
    stripe_unit: Optional[StrictStr] = None
    __properties = ["configuration", "data_pool", "dest_image_name", "dest_namespace", "dest_pool_name", "features", "obj_size", "snapshot_name", "stripe_count", "stripe_unit"]

    class Config:
        """Pydantic configuration"""
        allow_population_by_field_name = True
        validate_assignment = True

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> ApiBlockImageImageSpecCopyPostRequest:
        """Create an instance of ApiBlockImageImageSpecCopyPostRequest from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True,
                          exclude={
                          },
                          exclude_none=True)
        return _dict

    @classmethod
    def from_dict(cls, obj: dict) -> ApiBlockImageImageSpecCopyPostRequest:
        """Create an instance of ApiBlockImageImageSpecCopyPostRequest from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return ApiBlockImageImageSpecCopyPostRequest.parse_obj(obj)

        _obj = ApiBlockImageImageSpecCopyPostRequest.parse_obj({
            "configuration": obj.get("configuration"),
            "data_pool": obj.get("data_pool"),
            "dest_image_name": obj.get("dest_image_name"),
            "dest_namespace": obj.get("dest_namespace"),
            "dest_pool_name": obj.get("dest_pool_name"),
            "features": obj.get("features"),
            "obj_size": obj.get("obj_size"),
            "snapshot_name": obj.get("snapshot_name"),
            "stripe_count": obj.get("stripe_count"),
            "stripe_unit": obj.get("stripe_unit")
        })
        return _obj


