# Copyright (C) 2021 - 2025, Shanghai Yunsilicon Technology Co., Ltd.

# coding: utf-8

"""
    Ceph REST API

    This is the official Ceph REST API

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json


from typing import Optional
from pydantic import BaseModel, StrictInt

class StripInner(BaseModel):
    """
    StripInner
    """
    obj_size: Optional[StrictInt] = 4194304
    stripe_unit: Optional[StrictInt] = 4194304
    stripe_count: Optional[StrictInt] = 1
    __properties = ["obj_size", "stripe_unit", "stripe_count"]

    class Config:
        """Pydantic configuration"""
        allow_population_by_field_name = True
        validate_assignment = True

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> StripInner:
        """Create an instance of StripInner from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True,
                          exclude={
                          },
                          exclude_none=True)
        return _dict

    @classmethod
    def from_dict(cls, obj: dict) -> StripInner:
        """Create an instance of StripInner from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return StripInner.parse_obj(obj)

        _obj = StripInner.parse_obj({
            "obj_size": obj.get("obj_size") if obj.get("obj_size") is not None else 4194304,
            "stripe_unit": obj.get("stripe_unit") if obj.get("stripe_unit") is not None else 4194304,
            "stripe_count": obj.get("stripe_count") if obj.get("stripe_count") is not None else 1
        })
        return _obj


