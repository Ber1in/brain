# Copyright (C) 2021 - 2025, Shanghai Yunsilicon Technology Co., Ltd.

# coding: utf-8

"""
    Ceph REST API

    This is the official Ceph REST API

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json


from typing import List, Optional, Union
from pydantic import BaseModel, StrictFloat, StrictInt, conlist

class StatEntry(BaseModel):
    """
    StatEntry
    """
    latest: Optional[Union[StrictFloat, StrictInt]] = None
    rate: Optional[Union[StrictFloat, StrictInt]] = None
    rates: Optional[conlist(conlist(Union[StrictFloat, StrictInt], max_items=2, min_items=2))] = None
    __properties = ["latest", "rate", "rates"]

    class Config:
        """Pydantic configuration"""
        allow_population_by_field_name = True
        validate_assignment = True

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> StatEntry:
        """Create an instance of StatEntry from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True,
                          exclude={
                          },
                          exclude_none=True)
        return _dict

    @classmethod
    def from_dict(cls, obj: dict) -> StatEntry:
        """Create an instance of StatEntry from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return StatEntry.parse_obj(obj)

        _obj = StatEntry.parse_obj({
            "latest": obj.get("latest"),
            "rate": obj.get("rate"),
            "rates": obj.get("rates")
        })
        return _obj


